/*-------------------------------------
스마트 횡단보도 제작 프로젝트
제작자 : 배수한   소속 : 대구소프트웨어고등학교
프로젝트 시작일자 : 5월 17일   짬나는 시간마다 틈틈히 코딩

현재버전 1.0
--패치노트--
5월 28일 1.0 -- 각 부품을 제어하기 위한 예제코드를 모음 

----------------------------------------*/

//신호등
#define term 2000         //신호대기 시간(노란불)
#define cterm 500          //횡단보도 깜빡임 텀
#define crossTime 8000    //횡단보도 시간
#define crossOverTime 4000 //횡단보도 깜빡임 시간
#define lightTime 10000    //차량 신호 시간

int cRedPin = 13;    //c는 자동차
int cYellowPin = 12;
int cGreenPin = 11;
int wRedPin = 10; //w는 보행자
int wGreenPin = 9;

int wSwitch = LOW; //깜빡임을 구현하기 위한 스위치


//인체감지센서
int humanPin = 2; //인체감지센서 읽는 핀    
int humanVal = 0; //인체감지센서 값


//timer
unsigned long stTime = 0;
unsigned long edTime = 0;


//음석출력
#include "talkie.h"
Talkie voice;
//신호가 초록불일때 건너세요 음성 값을 계산한 것
const uint8_t cSound[] PROGMEM ={0x00, 0x08, 0x68, 0xc2, 0x93, 0x01, 0xcb, 0x9a, 0x5a, 0xc0, 0x00, 0x3b, 0x84, 0x0e, 0xd2, 0xc8, 0x9e, 0x09, 0x8b, 0x7b, 0x28, 0xa9, 0x6b, 0xc7, 0x64, 0x49, 0x63, 0xd1, 0xdc, 0x09, 0xd5, 0x26, 0x8b, 0x66, 0xad, 0xd2, 0x43, 0xd3, 0x2d, 0x56, 0x1c, 0x8a, 0x08, 0x89, 0x3d, 0x38, 0x7d, 0xb0, 0xdb, 0xc8, 0xc9, 0xe0, 0xed, 0xc6, 0x59, 0x43, 0x25, 0x4d, 0x34, 0x03, 0x6a, 0x0b, 0x95, 0x36, 0x49, 0x44, 0xad, 0x4e, 0x4c, 0x72, 0x38, 0x5b, 0x23, 0x23, 0x30, 0xc9, 0x61, 0x5d, 0xb3, 0x12, 0x95, 0xc5, 0x87, 0xf6, 0xcd, 0x83, 0xd5, 0x9b, 0x1c, 0xd2, 0x35, 0x0f, 0x31, 0xab, 0xbd, 0x08, 0xdd, 0x23, 0x49, 0xbc, 0x5b, 0xc2, 0xd9, 0xac, 0xa6, 0xc8, 0x2e, 0x02, 0xb7, 0x3a, 0x3a, 0x23, 0x9c, 0x38, 0xa2, 0x29, 0x0b, 0x37, 0xb3, 0x23, 0x80, 0xce, 0xc3, 0x15, 0xd0, 0x55, 0x78, 0x21, 0x9b, 0x35, 0xcd, 0x34, 0x2b, 0x05, 0x67, 0xcf, 0x3c, 0xdc, 0xdb, 0x2d, 0x82, 0x5d, 0xcb, 0x50, 0xeb, 0xd6, 0x38, 0xe3, 0x64, 0xad, 0x5c, 0xe9, 0xa1, 0x8c, 0xd7, 0xb1, 0xb4, 0xb8, 0x87, 0x32, 0x55, 0x33, 0x13, 0xd3, 0x2c, 0x4a, 0x4d, 0xf1, 0x0c, 0x6c, 0x1c, 0x78, 0x3e, 0x42, 0x75, 0xb1, 0x09, 0xa1, 0x79, 0x2e, 0xf7, 0x61, 0xb7, 0x88, 0xc7, 0xbd, 0x9d, 0x4b, 0x1d, 0x23, 0x01, 0xcc, 0xce, 0x72, 0xb3, 0xdd, 0x64, 0x6f, 0x2c, 0xbd, 0x2c, 0xce, 0x10, 0xd8, 0x54, 0xaf, 0x86, 0xd4, 0x47, 0x60, 0x29, 0x32, 0x92, 0x5d, 0x15, 0x15, 0xac, 0xea, 0x52, 0x73, 0xbd, 0x78, 0xea, 0x7b, 0x5d, 0xac, 0xe9, 0xe1, 0x99, 0xad, 0x4b, 0x97, 0x34, 0x4b, 0xa0, 0xb6, 0xae, 0x55, 0xd3, 0x0e, 0x81, 0xb8, 0xfe, 0x55, 0x49, 0x93, 0x04, 0x30, 0x7e, 0x5b, 0xd4, 0xb6, 0x12, 0xb0, 0xbd, 0xa9, 0xf0, 0xd8, 0x48, 0xa0, 0xb6, 0x22, 0x22, 0x2c, 0x05, 0x21, 0x59, 0x0b, 0x65, 0x8b, 0xbd, 0x18, 0x69, 0x6b, 0x4c, 0xa5, 0xc9, 0x61, 0xac, 0xad, 0x31, 0xe6, 0xa5, 0x87, 0x36, 0xb9, 0x9b, 0x58, 0x17, 0x1f, 0xda, 0xfa, 0x69, 0x26, 0x59, 0x74, 0x28, 0x13, 0xa7, 0x89, 0xe5, 0xce, 0xa0, 0x44, 0xeb, 0x24, 0xf5, 0x65, 0x86, 0x25, 0x7d, 0x92, 0xc3, 0x92, 0x36, 0xb6, 0x45, 0xd5, 0x70, 0xb5, 0xd3, 0x78, 0x15, 0x2c, 0x32, 0xb4, 0xe9, 0xe1, 0x64, 0x71, 0x8b, 0xd0, 0xc6, 0x87, 0xe7, 0xc5, 0xd3, 0xd5, 0x9a, 0x2c, 0x09, 0xf6, 0x2a, 0x37, 0xab, 0x1c, 0x24, 0xf0, 0xdb, 0xb8, 0x35, 0x72, 0x90, 0xc0, 0x0f, 0xb5, 0x71, 0x29, 0x4e, 0x04, 0xbf, 0x4c, 0xc7, 0xac, 0x0c, 0x01, 0x9e, 0x08, 0x57, 0x69, 0x72, 0x78, 0xb1, 0x2c, 0xcd, 0x28, 0xce, 0x11, 0x64, 0xb3, 0x74, 0xe7, 0xda, 0x47, 0x10, 0x2d, 0xc2, 0x82, 0xaa, 0x0c, 0x81, 0xcc, 0x72, 0x0d, 0xaa, 0x5b, 0xa4, 0x28, 0xd5, 0x32, 0x2c, 0x69, 0x13, 0xba, 0x55, 0xf3, 0x50, 0xb9, 0x4d, 0x4c, 0x8a, 0x72, 0x4a, 0x93, 0x2e, 0x89, 0xa4, 0x6e, 0x31, 0x8f, 0xba, 0x74, 0xea, 0x6a, 0x58, 0xbd, 0xce, 0xb2, 0x99, 0xed, 0x12, 0xf1, 0x59, 0xcb, 0xe1, 0xb6, 0x8a, 0xd4, 0x6b, 0x1f, 0x57, 0xf9, 0x48, 0x52, 0x9b, 0x74, 0x3c, 0x9d, 0x2c, 0x59, 0xac, 0xf2, 0xf2, 0x74, 0x96, 0x50, 0x93, 0xc9, 0xcb, 0xd3, 0x85, 0xc3, 0x8d, 0xab, 0x2c, 0xd7, 0x34, 0xca, 0x50, 0xaa, 0x3d, 0x5c, 0xd5, 0x31, 0x4a, 0xb8, 0x4e, 0x73, 0xe5, 0x40, 0x6f, 0xe5, 0xb8, 0xcd, 0x93, 0x1d, 0x7d, 0x0c, 0xe3, 0x26, 0x5f, 0x74, 0xcc, 0x51, 0x8a, 0xeb, 0x7c, 0xd6, 0xb1, 0x47, 0x39, 0x29, 0x71, 0xc1, 0xe7, 0x6c, 0x13, 0x37, 0x00, 0xf0, 0xff};


//Delay, 사람인식
void cDelay(int delayTime){
  unsigned long retTime = (unsigned long)millis(); //시작시간
  unsigned long nowTime = retTime;

  while(nowTime - retTime <= delayTime){   //중간시간 - 시작시간을 뺀값이 원하는 시간보다 크면 탈출
    humanVal = digitalRead(humanPin);

    if(humanVal == HIGH){
      //빨간불입니다 횡단 금지 
      Serial.println("사람인식");
      voice.say(cSound);
    }
    else{
      //할게 없다
    }
     
    
    delay(50);
    nowTime = (unsigned long)millis();  //중간시간 체크
  }

}


//보행자 신호등 Delay, 사람있는 것 인식
bool wDelay(int delayTime){
  unsigned long retTime = (unsigned long)millis();
  unsigned long nowTime = retTime;
  long b = 0;
  while(nowTime - retTime <= delayTime){
    //동작

    humanVal = digitalRead(humanPin);


    if(humanVal > 0){
      b++;
    }
    nowTime = (unsigned long)millis();
  }

  return (b > 0); //한번이라도 인식을 했으면 true
}



void setup() {
  
  pinMode(cRedPin, OUTPUT);
  pinMode(cYellowPin, OUTPUT);
  pinMode(cGreenPin, OUTPUT);
  pinMode(wRedPin, OUTPUT);
  pinMode(wGreenPin, OUTPUT);
  
  
  pinMode(humanPin, INPUT);

  Serial.begin(9600);
  
}



void loop() {


  //차량 초록불
  digitalWrite(cRedPin,LOW);
  digitalWrite(wGreenPin,LOW);
  digitalWrite(wRedPin,HIGH);
  digitalWrite(cGreenPin,HIGH);
  cDelay(lightTime);


  //차량 노란불
  digitalWrite(cGreenPin,LOW);
  digitalWrite(cYellowPin,HIGH);
  cDelay(term);


  //차량 빨간불 
  digitalWrite(cYellowPin,LOW);
  digitalWrite(cRedPin,HIGH);

  //보행자 초록불
  digitalWrite(wRedPin,LOW);
  digitalWrite(wGreenPin,HIGH);
  wDelay(crossTime - crossOverTime);

  
  //초록불 깜빡이기
  for(int i = 0; i < crossTime / cterm || humanVal == HIGH; i++){ 
  //시간이 지나고 횡단보도에 사용자가 없으면 탈출
    
    if(wSwitch == HIGH)
      wSwitch = LOW;
    else
      wSwitch = HIGH;

   
    digitalWrite(wGreenPin,wSwitch);
    humanVal = wDelay(cterm);

    
    Serial.print(i);
    Serial.print(": ");
    Serial.println(humanVal);
    
  }
   

}
